CREATE DATABASE UK_ROAD_ACCIDENTS;
USE UK_ROAD_ACCIDENTS;

CREATE TABLE IF NOT EXISTS ACCIDENTS_2015 (
ACCIDENT_INDEX VARCHAR(100),
LOCATION_EASTING_OSGR VARCHAR(100) NULL,
LOCATION_NORTHING_OSGR VARCHAR(100) NULL,
LONGITUDE VARCHAR(100) NULL,
LATITUDE VARCHAR(100) NULL,
POLICE_FORCE INT,
ACCIDENT_SEVERITY INT,
NUMBER_OF_VEHICLES INT,
NUMBER_OF_CASUALTIES INT,
`DATE` DATE,
DAY_OF_WEEK INT,
`TIME` TIME,
LOCAL_AUTHORITY_DISTRICT INT,
LOCAL_AUTHOIRTY_HIGHWAY VARCHAR(100),
1ST_ROAD_CLASS INT,
1ST_ROAD_NUMBER INT,
ROAD_TYPE INT,
SPEED_LIMIT INT,
JUNCTION_DETAIL INT,
JUNCTION_CONTROL INT,
2ND_ROAD_CLASS INT,
2ND_ROAD_NUMBER INT,
PEDESTRIAN_CROSSING_HUMAN_CONTROL INT,
PEDESTRIAN_CROSSING_PHYSICAL_FACILTIES INT,
LIGHT_CONDITIONS INT,
WEATHER_CONDITIONS INT,
ROAD_SURFACE_CONDITIONS INT,
SPECIAL_CONDITIONS_AT_SITE INT,
CARRIAGEWAY_HAZARDS INT,
URBAN_OR_RURAL_AREA INT,
DID_POLICE_OFFICER_ATTEND_SCENE_OF_ACCIDENT INT,
LSOA_OF_ACCIDENT_LOCATION VARCHAR(100));

LOAD DATA INFILE
'E:/Accidents_2015.csv'
INTO TABLE ACCIDENTS_2015
FIELDS TERMINATED BY ','
ENCLOSED BY '"'
LINES TERMINATED BY '\n'
IGNORE 1 ROWS;

SELECT * FROM ACCIDENTS_2015;

CREATE TABLE IF NOT EXISTS VEHICLE_TYPES (
CODE INT,
LABEL VARCHAR(100));

LOAD DATA INFILE
'E:/vehicle_types.csv'
INTO TABLE VEHICLE_TYPES
FIELDS TERMINATED BY ','
ENCLOSED BY '"'
LINES TERMINATED BY '\n'
IGNORE 1 ROWS;

SELECT * FROM VEHICLE_TYPES;

CREATE TABLE IF NOT EXISTS VEHICLES_2015 (
ACCIDENT_INDEX VARCHAR(100),
VEHICLE_REFERENCE INT,
VEHICLE_TYPE INT,
TOWING_AND_ARTICULATION INT,
VEHICLE_MANOEUVRE INT,
VEHICLE_LOCATION_RESTRICTED_LANE INT,
JUNCTION_LOCATION INT,
SKIDDING_AND_OVERTURNING INT,
HIT_OBJECT_IN_CARRIAGEWAY INT,
VEHICLE_LEAVING_CARRIAGEWAY INT,
HIT_OBJECT_OFF_CARRIAGE INT,
1ST_POINT_OF_IMPACT INT,
WAS_VEHICLE_LEFT_HAND_DRIVE INT,
JOURNEY_PURPOSE_OF_DRIVER INT,
SEX_OF_DRIVER INT,
AGE_OF_DRIVER INT,
AGE_BAND_OF_DRIVER INT,
ENGINE_CAPACITY_CC INT,
PROPULSION_CODE INT,
AGE_OF_VEHICLE INT,
DRIVER_IMD_DECILE INT,
DRIVER_HOME_AREA_TYPE INT,
VEHICLE_IMD_DECILE INT);

LOAD DATA INFILE
'E:/Vehicles_2015.csv'
INTO TABLE VEHICLES_2015
FIELDS TERMINATED BY ','
ENCLOSED BY '"'
LINES TERMINATED BY '\n'
IGNORE 1 ROWS;

SELECT * FROM VEHICLES_2015;

/* BUSINESS PROBLEM:
The UK Department of Transport provides open datasets on road safety and casualties, and one can
use these datasets to analyze how safe the roads in the UK are. This project will help you answer a
few questions using their 2015 dataset.
The dataset has 3 tables i.e Accident, vehicle, Vehicle_type */


/* APPROACH/PROJECT IDEA */
/* Use aggregate functions in SQL and Python to answer the following sample questions: */
/* Q-1. Evaluate the median severity value of accidents caused by various Motorcycles. */
SELECT vt.LABEL AS VEHICLE_TYPE, IFNULL(SUBSTRING_INDEX(SUBSTRING_INDEX(GROUP_CONCAT(a.ACCIDENT_SEVERITY ORDER BY a.ACCIDENT_SEVERITY),',', COUNT(*)/2 + 1), ',', -1), 'No Data') AS MEDIAN_SEVERITY 
FROM VEHICLE_TYPES vt 
JOIN VEHICLES_2015 v ON vt.CODE = v.VEHICLE_TYPE
JOIN ACCIDENTS_2015 a ON v.ACCIDENT_INDEX = a.ACCIDENT_INDEX WHERE vt.LABEL LIKE 'MOTORCYCLE%' GROUP BY vt.LABEL;

/* Q-2. Evaluate Accident Severity and Total Accidents per Vehicle Type */
SELECT sf.LABEL AS VEHICLE_TYPE, COUNT(*) AS TOTAL_ACCIDENTS, AVG(w.ACCIDENT_SEVERITY) AS AVERAGE_SEVERITY FROM ACCIDENTS_2015 w
JOIN VEHICLES_2015 q  ON w.ACCIDENT_INDEX = q.ACCIDENT_INDEX
JOIN VEHICLE_TYPES sf ON q.VEHICLE_TYPE = sf.CODE
GROUP BY sf.LABEL
ORDER BY TOTAL_ACCIDENTS DESC;

/* Q-3. Calculate the Average Severity by vehicle type. */
SELECT sf.LABEL AS VEHICLE_TYPE, AVG(a.ACCIDENT_SEVERITY) AS AVERAGE_SEVERITY FROM ACCIDENTS_2015 a
JOIN VEHICLES_2015 m ON a.ACCIDENT_INDEX = m.ACCIDENT_INDEX
JOIN VEHICLE_TYPES sf on m.VEHICLE_TYPE = sf.CODE
GROUP BY sf.LABEL;

/* Q-4. Calculate the Average Severity and Total Accidents by Motorcycle. */
SELECT sf.LABEL AS VEHICLE_TYPE, COUNT(*) AS TOTAL_ACCIDENTS, AVG(k.ACCIDENT_SEVERITY) AS AVERAGE_SEVERITY FROM ACCIDENTS_2015 k
JOIN VEHICLES_2015 d ON k.ACCIDENT_INDEX = d.ACCIDENT_INDEX
JOIN VEHICLE_TYPES sf ON d.VEHICLE_TYPE = sf.CODE WHERE sf.LABEL LIKE 'MOTORCYCLE%'
GROUP BY sf.LABEL;